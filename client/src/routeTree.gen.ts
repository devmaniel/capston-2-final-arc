/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as ViolationspageImport } from './routes/violations_page'
import { Route as RegisterImport } from './routes/register'
import { Route as PrivacyImport } from './routes/privacy'
import { Route as NolongerImport } from './routes/nolonger'
import { Route as LoginImport } from './routes/login'
import { Route as ForgotpasswordImport } from './routes/forgot_password'
import { Route as Error404Import } from './routes/error404'
import { Route as DesignImport } from './routes/design'
import { Route as ChangepasswordImport } from './routes/change_password'
import { Route as IndexImport } from './routes/index'
import { Route as StudentIndexImport } from './routes/student/index'
import { Route as AdminIndexImport } from './routes/admin/index'
import { Route as TestTestPostImport } from './routes/test/testPost'
import { Route as TestQueryParamsImport } from './routes/test/queryParams'
import { Route as TestGetImageImport } from './routes/test/getImage'
import { Route as StudentSpecEventsImport } from './routes/student/Spec_Events'
import { Route as StudentEventsImport } from './routes/student/Events'
import { Route as StudentRequesthistoryIndexImport } from './routes/student/request_history/index'
import { Route as StudentProfilesettingIndexImport } from './routes/student/profile_setting/index'
import { Route as StudentNotificationsIndexImport } from './routes/student/notifications/index'
import { Route as StudentMobilenotifIndexImport } from './routes/student/mobile_notif/index'
import { Route as StudentCatalogIndexImport } from './routes/student/catalog/index'
import { Route as StudentBookmarkIndexImport } from './routes/student/bookmark/index'
import { Route as StudentAboutIndexImport } from './routes/student/about/index'
import { Route as AdminManageviolationsIndexImport } from './routes/admin/manage_violations/index'
import { Route as AdminManagestudentsIndexImport } from './routes/admin/manage_students/index'
import { Route as AdminManagerequestIndexImport } from './routes/admin/manage_request/index'
import { Route as AdminManagelrnIndexImport } from './routes/admin/manage_lrn/index'
import { Route as AdminManagebooksIndexImport } from './routes/admin/manage_books/index'
import { Route as AdminAnalyticsIndexImport } from './routes/admin/analytics/index'
import { Route as StudentTermsOfuseTermsImport } from './routes/student/termsOfuse/Terms'
import { Route as StudentRequesthistoryViewrequestImport } from './routes/student/request_history/view_request'
import { Route as StudentPrivacyPrivacyImport } from './routes/student/privacy/Privacy'
import { Route as StudentFrequentlyAskFAQImport } from './routes/student/frequentlyAsk/FAQ'
import { Route as StudentContactContactImport } from './routes/student/contact/Contact'
import { Route as StudentCatalogBookImport } from './routes/student/catalog/book'
import { Route as AdminProfilesettingsProfilesettingsImport } from './routes/admin/profile_settings/profile_settings'
import { Route as AdminManageviolationsHandleviolationsImport } from './routes/admin/manage_violations/handle_violations'
import { Route as AdminManagestudentsStudentviewformImport } from './routes/admin/manage_students/student_view_form'
import { Route as AdminManagestudentsCreateaccountImport } from './routes/admin/manage_students/create_account'
import { Route as AdminManagerequestViewrequestformImport } from './routes/admin/manage_request/view_request_form'
import { Route as AdminManagerequestOnsiterequestImport } from './routes/admin/manage_request/onsite_request'
import { Route as AdminManagelrnSpecificlrnImport } from './routes/admin/manage_lrn/specific_lrn'
import { Route as AdminManagelrnCycleaccountImport } from './routes/admin/manage_lrn/cycle_account'
import { Route as AdminManagebooksQrscanaddbooksformImport } from './routes/admin/manage_books/qr_scan_add_books_form'
import { Route as AdminManagebooksQrscanaddbooksbarcodeImport } from './routes/admin/manage_books/qr_scan_add_books_barcode'
import { Route as AdminManagebooksQrscanaddbooksImport } from './routes/admin/manage_books/qr_scan_add_books'
import { Route as AdminManagebooksEditbookImport } from './routes/admin/manage_books/edit_book'
import { Route as AdminManagebooksCreatebooksImport } from './routes/admin/manage_books/create_books'
import { Route as AdminAnalyticsPrintmostyearlevelsectionborrowerImport } from './routes/admin/analytics/print_most_year_level_section_borrower'
import { Route as AdminAnalyticsPrintmostyearlevelborrowerImport } from './routes/admin/analytics/print_most_year_level_borrower'
import { Route as AdminAnalyticsPrintdataImport } from './routes/admin/analytics/print_data'
import { Route as AdminAnalyticsMostfrequeststrandborrowerImport } from './routes/admin/analytics/most_frequest_strand_borrower'

// Create/Update Routes

const ViolationspageRoute = ViolationspageImport.update({
  path: '/violations_page',
  getParentRoute: () => rootRoute,
} as any)

const RegisterRoute = RegisterImport.update({
  path: '/register',
  getParentRoute: () => rootRoute,
} as any)

const PrivacyRoute = PrivacyImport.update({
  path: '/privacy',
  getParentRoute: () => rootRoute,
} as any)

const NolongerRoute = NolongerImport.update({
  path: '/nolonger',
  getParentRoute: () => rootRoute,
} as any)

const LoginRoute = LoginImport.update({
  path: '/login',
  getParentRoute: () => rootRoute,
} as any)

const ForgotpasswordRoute = ForgotpasswordImport.update({
  path: '/forgot_password',
  getParentRoute: () => rootRoute,
} as any)

const Error404Route = Error404Import.update({
  path: '/error404',
  getParentRoute: () => rootRoute,
} as any)

const DesignRoute = DesignImport.update({
  path: '/design',
  getParentRoute: () => rootRoute,
} as any)

const ChangepasswordRoute = ChangepasswordImport.update({
  path: '/change_password',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const StudentIndexRoute = StudentIndexImport.update({
  path: '/student/',
  getParentRoute: () => rootRoute,
} as any)

const AdminIndexRoute = AdminIndexImport.update({
  path: '/admin/',
  getParentRoute: () => rootRoute,
} as any)

const TestTestPostRoute = TestTestPostImport.update({
  path: '/test/testPost',
  getParentRoute: () => rootRoute,
} as any)

const TestQueryParamsRoute = TestQueryParamsImport.update({
  path: '/test/queryParams',
  getParentRoute: () => rootRoute,
} as any)

const TestGetImageRoute = TestGetImageImport.update({
  path: '/test/getImage',
  getParentRoute: () => rootRoute,
} as any)

const StudentSpecEventsRoute = StudentSpecEventsImport.update({
  path: '/student/Spec_Events',
  getParentRoute: () => rootRoute,
} as any)

const StudentEventsRoute = StudentEventsImport.update({
  path: '/student/Events',
  getParentRoute: () => rootRoute,
} as any)

const StudentRequesthistoryIndexRoute = StudentRequesthistoryIndexImport.update(
  {
    path: '/student/request_history/',
    getParentRoute: () => rootRoute,
  } as any,
)

const StudentProfilesettingIndexRoute = StudentProfilesettingIndexImport.update(
  {
    path: '/student/profile_setting/',
    getParentRoute: () => rootRoute,
  } as any,
)

const StudentNotificationsIndexRoute = StudentNotificationsIndexImport.update({
  path: '/student/notifications/',
  getParentRoute: () => rootRoute,
} as any)

const StudentMobilenotifIndexRoute = StudentMobilenotifIndexImport.update({
  path: '/student/mobile_notif/',
  getParentRoute: () => rootRoute,
} as any)

const StudentCatalogIndexRoute = StudentCatalogIndexImport.update({
  path: '/student/catalog/',
  getParentRoute: () => rootRoute,
} as any)

const StudentBookmarkIndexRoute = StudentBookmarkIndexImport.update({
  path: '/student/bookmark/',
  getParentRoute: () => rootRoute,
} as any)

const StudentAboutIndexRoute = StudentAboutIndexImport.update({
  path: '/student/about/',
  getParentRoute: () => rootRoute,
} as any)

const AdminManageviolationsIndexRoute = AdminManageviolationsIndexImport.update(
  {
    path: '/admin/manage_violations/',
    getParentRoute: () => rootRoute,
  } as any,
)

const AdminManagestudentsIndexRoute = AdminManagestudentsIndexImport.update({
  path: '/admin/manage_students/',
  getParentRoute: () => rootRoute,
} as any)

const AdminManagerequestIndexRoute = AdminManagerequestIndexImport.update({
  path: '/admin/manage_request/',
  getParentRoute: () => rootRoute,
} as any)

const AdminManagelrnIndexRoute = AdminManagelrnIndexImport.update({
  path: '/admin/manage_lrn/',
  getParentRoute: () => rootRoute,
} as any)

const AdminManagebooksIndexRoute = AdminManagebooksIndexImport.update({
  path: '/admin/manage_books/',
  getParentRoute: () => rootRoute,
} as any)

const AdminAnalyticsIndexRoute = AdminAnalyticsIndexImport.update({
  path: '/admin/analytics/',
  getParentRoute: () => rootRoute,
} as any)

const StudentTermsOfuseTermsRoute = StudentTermsOfuseTermsImport.update({
  path: '/student/termsOfuse/Terms',
  getParentRoute: () => rootRoute,
} as any)

const StudentRequesthistoryViewrequestRoute =
  StudentRequesthistoryViewrequestImport.update({
    path: '/student/request_history/view_request',
    getParentRoute: () => rootRoute,
  } as any)

const StudentPrivacyPrivacyRoute = StudentPrivacyPrivacyImport.update({
  path: '/student/privacy/Privacy',
  getParentRoute: () => rootRoute,
} as any)

const StudentFrequentlyAskFAQRoute = StudentFrequentlyAskFAQImport.update({
  path: '/student/frequentlyAsk/FAQ',
  getParentRoute: () => rootRoute,
} as any)

const StudentContactContactRoute = StudentContactContactImport.update({
  path: '/student/contact/Contact',
  getParentRoute: () => rootRoute,
} as any)

const StudentCatalogBookRoute = StudentCatalogBookImport.update({
  path: '/student/catalog/book',
  getParentRoute: () => rootRoute,
} as any)

const AdminProfilesettingsProfilesettingsRoute =
  AdminProfilesettingsProfilesettingsImport.update({
    path: '/admin/profile_settings/profile_settings',
    getParentRoute: () => rootRoute,
  } as any)

const AdminManageviolationsHandleviolationsRoute =
  AdminManageviolationsHandleviolationsImport.update({
    path: '/admin/manage_violations/handle_violations',
    getParentRoute: () => rootRoute,
  } as any)

const AdminManagestudentsStudentviewformRoute =
  AdminManagestudentsStudentviewformImport.update({
    path: '/admin/manage_students/student_view_form',
    getParentRoute: () => rootRoute,
  } as any)

const AdminManagestudentsCreateaccountRoute =
  AdminManagestudentsCreateaccountImport.update({
    path: '/admin/manage_students/create_account',
    getParentRoute: () => rootRoute,
  } as any)

const AdminManagerequestViewrequestformRoute =
  AdminManagerequestViewrequestformImport.update({
    path: '/admin/manage_request/view_request_form',
    getParentRoute: () => rootRoute,
  } as any)

const AdminManagerequestOnsiterequestRoute =
  AdminManagerequestOnsiterequestImport.update({
    path: '/admin/manage_request/onsite_request',
    getParentRoute: () => rootRoute,
  } as any)

const AdminManagelrnSpecificlrnRoute = AdminManagelrnSpecificlrnImport.update({
  path: '/admin/manage_lrn/specific_lrn',
  getParentRoute: () => rootRoute,
} as any)

const AdminManagelrnCycleaccountRoute = AdminManagelrnCycleaccountImport.update(
  {
    path: '/admin/manage_lrn/cycle_account',
    getParentRoute: () => rootRoute,
  } as any,
)

const AdminManagebooksQrscanaddbooksformRoute =
  AdminManagebooksQrscanaddbooksformImport.update({
    path: '/admin/manage_books/qr_scan_add_books_form',
    getParentRoute: () => rootRoute,
  } as any)

const AdminManagebooksQrscanaddbooksbarcodeRoute =
  AdminManagebooksQrscanaddbooksbarcodeImport.update({
    path: '/admin/manage_books/qr_scan_add_books_barcode',
    getParentRoute: () => rootRoute,
  } as any)

const AdminManagebooksQrscanaddbooksRoute =
  AdminManagebooksQrscanaddbooksImport.update({
    path: '/admin/manage_books/qr_scan_add_books',
    getParentRoute: () => rootRoute,
  } as any)

const AdminManagebooksEditbookRoute = AdminManagebooksEditbookImport.update({
  path: '/admin/manage_books/edit_book',
  getParentRoute: () => rootRoute,
} as any)

const AdminManagebooksCreatebooksRoute =
  AdminManagebooksCreatebooksImport.update({
    path: '/admin/manage_books/create_books',
    getParentRoute: () => rootRoute,
  } as any)

const AdminAnalyticsPrintmostyearlevelsectionborrowerRoute =
  AdminAnalyticsPrintmostyearlevelsectionborrowerImport.update({
    path: '/admin/analytics/print_most_year_level_section_borrower',
    getParentRoute: () => rootRoute,
  } as any)

const AdminAnalyticsPrintmostyearlevelborrowerRoute =
  AdminAnalyticsPrintmostyearlevelborrowerImport.update({
    path: '/admin/analytics/print_most_year_level_borrower',
    getParentRoute: () => rootRoute,
  } as any)

const AdminAnalyticsPrintdataRoute = AdminAnalyticsPrintdataImport.update({
  path: '/admin/analytics/print_data',
  getParentRoute: () => rootRoute,
} as any)

const AdminAnalyticsMostfrequeststrandborrowerRoute =
  AdminAnalyticsMostfrequeststrandborrowerImport.update({
    path: '/admin/analytics/most_frequest_strand_borrower',
    getParentRoute: () => rootRoute,
  } as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/change_password': {
      id: '/change_password'
      path: '/change_password'
      fullPath: '/change_password'
      preLoaderRoute: typeof ChangepasswordImport
      parentRoute: typeof rootRoute
    }
    '/design': {
      id: '/design'
      path: '/design'
      fullPath: '/design'
      preLoaderRoute: typeof DesignImport
      parentRoute: typeof rootRoute
    }
    '/error404': {
      id: '/error404'
      path: '/error404'
      fullPath: '/error404'
      preLoaderRoute: typeof Error404Import
      parentRoute: typeof rootRoute
    }
    '/forgot_password': {
      id: '/forgot_password'
      path: '/forgot_password'
      fullPath: '/forgot_password'
      preLoaderRoute: typeof ForgotpasswordImport
      parentRoute: typeof rootRoute
    }
    '/login': {
      id: '/login'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof LoginImport
      parentRoute: typeof rootRoute
    }
    '/nolonger': {
      id: '/nolonger'
      path: '/nolonger'
      fullPath: '/nolonger'
      preLoaderRoute: typeof NolongerImport
      parentRoute: typeof rootRoute
    }
    '/privacy': {
      id: '/privacy'
      path: '/privacy'
      fullPath: '/privacy'
      preLoaderRoute: typeof PrivacyImport
      parentRoute: typeof rootRoute
    }
    '/register': {
      id: '/register'
      path: '/register'
      fullPath: '/register'
      preLoaderRoute: typeof RegisterImport
      parentRoute: typeof rootRoute
    }
    '/violations_page': {
      id: '/violations_page'
      path: '/violations_page'
      fullPath: '/violations_page'
      preLoaderRoute: typeof ViolationspageImport
      parentRoute: typeof rootRoute
    }
    '/student/Events': {
      id: '/student/Events'
      path: '/student/Events'
      fullPath: '/student/Events'
      preLoaderRoute: typeof StudentEventsImport
      parentRoute: typeof rootRoute
    }
    '/student/Spec_Events': {
      id: '/student/Spec_Events'
      path: '/student/Spec_Events'
      fullPath: '/student/Spec_Events'
      preLoaderRoute: typeof StudentSpecEventsImport
      parentRoute: typeof rootRoute
    }
    '/test/getImage': {
      id: '/test/getImage'
      path: '/test/getImage'
      fullPath: '/test/getImage'
      preLoaderRoute: typeof TestGetImageImport
      parentRoute: typeof rootRoute
    }
    '/test/queryParams': {
      id: '/test/queryParams'
      path: '/test/queryParams'
      fullPath: '/test/queryParams'
      preLoaderRoute: typeof TestQueryParamsImport
      parentRoute: typeof rootRoute
    }
    '/test/testPost': {
      id: '/test/testPost'
      path: '/test/testPost'
      fullPath: '/test/testPost'
      preLoaderRoute: typeof TestTestPostImport
      parentRoute: typeof rootRoute
    }
    '/admin/': {
      id: '/admin/'
      path: '/admin'
      fullPath: '/admin'
      preLoaderRoute: typeof AdminIndexImport
      parentRoute: typeof rootRoute
    }
    '/student/': {
      id: '/student/'
      path: '/student'
      fullPath: '/student'
      preLoaderRoute: typeof StudentIndexImport
      parentRoute: typeof rootRoute
    }
    '/admin/analytics/most_frequest_strand_borrower': {
      id: '/admin/analytics/most_frequest_strand_borrower'
      path: '/admin/analytics/most_frequest_strand_borrower'
      fullPath: '/admin/analytics/most_frequest_strand_borrower'
      preLoaderRoute: typeof AdminAnalyticsMostfrequeststrandborrowerImport
      parentRoute: typeof rootRoute
    }
    '/admin/analytics/print_data': {
      id: '/admin/analytics/print_data'
      path: '/admin/analytics/print_data'
      fullPath: '/admin/analytics/print_data'
      preLoaderRoute: typeof AdminAnalyticsPrintdataImport
      parentRoute: typeof rootRoute
    }
    '/admin/analytics/print_most_year_level_borrower': {
      id: '/admin/analytics/print_most_year_level_borrower'
      path: '/admin/analytics/print_most_year_level_borrower'
      fullPath: '/admin/analytics/print_most_year_level_borrower'
      preLoaderRoute: typeof AdminAnalyticsPrintmostyearlevelborrowerImport
      parentRoute: typeof rootRoute
    }
    '/admin/analytics/print_most_year_level_section_borrower': {
      id: '/admin/analytics/print_most_year_level_section_borrower'
      path: '/admin/analytics/print_most_year_level_section_borrower'
      fullPath: '/admin/analytics/print_most_year_level_section_borrower'
      preLoaderRoute: typeof AdminAnalyticsPrintmostyearlevelsectionborrowerImport
      parentRoute: typeof rootRoute
    }
    '/admin/manage_books/create_books': {
      id: '/admin/manage_books/create_books'
      path: '/admin/manage_books/create_books'
      fullPath: '/admin/manage_books/create_books'
      preLoaderRoute: typeof AdminManagebooksCreatebooksImport
      parentRoute: typeof rootRoute
    }
    '/admin/manage_books/edit_book': {
      id: '/admin/manage_books/edit_book'
      path: '/admin/manage_books/edit_book'
      fullPath: '/admin/manage_books/edit_book'
      preLoaderRoute: typeof AdminManagebooksEditbookImport
      parentRoute: typeof rootRoute
    }
    '/admin/manage_books/qr_scan_add_books': {
      id: '/admin/manage_books/qr_scan_add_books'
      path: '/admin/manage_books/qr_scan_add_books'
      fullPath: '/admin/manage_books/qr_scan_add_books'
      preLoaderRoute: typeof AdminManagebooksQrscanaddbooksImport
      parentRoute: typeof rootRoute
    }
    '/admin/manage_books/qr_scan_add_books_barcode': {
      id: '/admin/manage_books/qr_scan_add_books_barcode'
      path: '/admin/manage_books/qr_scan_add_books_barcode'
      fullPath: '/admin/manage_books/qr_scan_add_books_barcode'
      preLoaderRoute: typeof AdminManagebooksQrscanaddbooksbarcodeImport
      parentRoute: typeof rootRoute
    }
    '/admin/manage_books/qr_scan_add_books_form': {
      id: '/admin/manage_books/qr_scan_add_books_form'
      path: '/admin/manage_books/qr_scan_add_books_form'
      fullPath: '/admin/manage_books/qr_scan_add_books_form'
      preLoaderRoute: typeof AdminManagebooksQrscanaddbooksformImport
      parentRoute: typeof rootRoute
    }
    '/admin/manage_lrn/cycle_account': {
      id: '/admin/manage_lrn/cycle_account'
      path: '/admin/manage_lrn/cycle_account'
      fullPath: '/admin/manage_lrn/cycle_account'
      preLoaderRoute: typeof AdminManagelrnCycleaccountImport
      parentRoute: typeof rootRoute
    }
    '/admin/manage_lrn/specific_lrn': {
      id: '/admin/manage_lrn/specific_lrn'
      path: '/admin/manage_lrn/specific_lrn'
      fullPath: '/admin/manage_lrn/specific_lrn'
      preLoaderRoute: typeof AdminManagelrnSpecificlrnImport
      parentRoute: typeof rootRoute
    }
    '/admin/manage_request/onsite_request': {
      id: '/admin/manage_request/onsite_request'
      path: '/admin/manage_request/onsite_request'
      fullPath: '/admin/manage_request/onsite_request'
      preLoaderRoute: typeof AdminManagerequestOnsiterequestImport
      parentRoute: typeof rootRoute
    }
    '/admin/manage_request/view_request_form': {
      id: '/admin/manage_request/view_request_form'
      path: '/admin/manage_request/view_request_form'
      fullPath: '/admin/manage_request/view_request_form'
      preLoaderRoute: typeof AdminManagerequestViewrequestformImport
      parentRoute: typeof rootRoute
    }
    '/admin/manage_students/create_account': {
      id: '/admin/manage_students/create_account'
      path: '/admin/manage_students/create_account'
      fullPath: '/admin/manage_students/create_account'
      preLoaderRoute: typeof AdminManagestudentsCreateaccountImport
      parentRoute: typeof rootRoute
    }
    '/admin/manage_students/student_view_form': {
      id: '/admin/manage_students/student_view_form'
      path: '/admin/manage_students/student_view_form'
      fullPath: '/admin/manage_students/student_view_form'
      preLoaderRoute: typeof AdminManagestudentsStudentviewformImport
      parentRoute: typeof rootRoute
    }
    '/admin/manage_violations/handle_violations': {
      id: '/admin/manage_violations/handle_violations'
      path: '/admin/manage_violations/handle_violations'
      fullPath: '/admin/manage_violations/handle_violations'
      preLoaderRoute: typeof AdminManageviolationsHandleviolationsImport
      parentRoute: typeof rootRoute
    }
    '/admin/profile_settings/profile_settings': {
      id: '/admin/profile_settings/profile_settings'
      path: '/admin/profile_settings/profile_settings'
      fullPath: '/admin/profile_settings/profile_settings'
      preLoaderRoute: typeof AdminProfilesettingsProfilesettingsImport
      parentRoute: typeof rootRoute
    }
    '/student/catalog/book': {
      id: '/student/catalog/book'
      path: '/student/catalog/book'
      fullPath: '/student/catalog/book'
      preLoaderRoute: typeof StudentCatalogBookImport
      parentRoute: typeof rootRoute
    }
    '/student/contact/Contact': {
      id: '/student/contact/Contact'
      path: '/student/contact/Contact'
      fullPath: '/student/contact/Contact'
      preLoaderRoute: typeof StudentContactContactImport
      parentRoute: typeof rootRoute
    }
    '/student/frequentlyAsk/FAQ': {
      id: '/student/frequentlyAsk/FAQ'
      path: '/student/frequentlyAsk/FAQ'
      fullPath: '/student/frequentlyAsk/FAQ'
      preLoaderRoute: typeof StudentFrequentlyAskFAQImport
      parentRoute: typeof rootRoute
    }
    '/student/privacy/Privacy': {
      id: '/student/privacy/Privacy'
      path: '/student/privacy/Privacy'
      fullPath: '/student/privacy/Privacy'
      preLoaderRoute: typeof StudentPrivacyPrivacyImport
      parentRoute: typeof rootRoute
    }
    '/student/request_history/view_request': {
      id: '/student/request_history/view_request'
      path: '/student/request_history/view_request'
      fullPath: '/student/request_history/view_request'
      preLoaderRoute: typeof StudentRequesthistoryViewrequestImport
      parentRoute: typeof rootRoute
    }
    '/student/termsOfuse/Terms': {
      id: '/student/termsOfuse/Terms'
      path: '/student/termsOfuse/Terms'
      fullPath: '/student/termsOfuse/Terms'
      preLoaderRoute: typeof StudentTermsOfuseTermsImport
      parentRoute: typeof rootRoute
    }
    '/admin/analytics/': {
      id: '/admin/analytics/'
      path: '/admin/analytics'
      fullPath: '/admin/analytics'
      preLoaderRoute: typeof AdminAnalyticsIndexImport
      parentRoute: typeof rootRoute
    }
    '/admin/manage_books/': {
      id: '/admin/manage_books/'
      path: '/admin/manage_books'
      fullPath: '/admin/manage_books'
      preLoaderRoute: typeof AdminManagebooksIndexImport
      parentRoute: typeof rootRoute
    }
    '/admin/manage_lrn/': {
      id: '/admin/manage_lrn/'
      path: '/admin/manage_lrn'
      fullPath: '/admin/manage_lrn'
      preLoaderRoute: typeof AdminManagelrnIndexImport
      parentRoute: typeof rootRoute
    }
    '/admin/manage_request/': {
      id: '/admin/manage_request/'
      path: '/admin/manage_request'
      fullPath: '/admin/manage_request'
      preLoaderRoute: typeof AdminManagerequestIndexImport
      parentRoute: typeof rootRoute
    }
    '/admin/manage_students/': {
      id: '/admin/manage_students/'
      path: '/admin/manage_students'
      fullPath: '/admin/manage_students'
      preLoaderRoute: typeof AdminManagestudentsIndexImport
      parentRoute: typeof rootRoute
    }
    '/admin/manage_violations/': {
      id: '/admin/manage_violations/'
      path: '/admin/manage_violations'
      fullPath: '/admin/manage_violations'
      preLoaderRoute: typeof AdminManageviolationsIndexImport
      parentRoute: typeof rootRoute
    }
    '/student/about/': {
      id: '/student/about/'
      path: '/student/about'
      fullPath: '/student/about'
      preLoaderRoute: typeof StudentAboutIndexImport
      parentRoute: typeof rootRoute
    }
    '/student/bookmark/': {
      id: '/student/bookmark/'
      path: '/student/bookmark'
      fullPath: '/student/bookmark'
      preLoaderRoute: typeof StudentBookmarkIndexImport
      parentRoute: typeof rootRoute
    }
    '/student/catalog/': {
      id: '/student/catalog/'
      path: '/student/catalog'
      fullPath: '/student/catalog'
      preLoaderRoute: typeof StudentCatalogIndexImport
      parentRoute: typeof rootRoute
    }
    '/student/mobile_notif/': {
      id: '/student/mobile_notif/'
      path: '/student/mobile_notif'
      fullPath: '/student/mobile_notif'
      preLoaderRoute: typeof StudentMobilenotifIndexImport
      parentRoute: typeof rootRoute
    }
    '/student/notifications/': {
      id: '/student/notifications/'
      path: '/student/notifications'
      fullPath: '/student/notifications'
      preLoaderRoute: typeof StudentNotificationsIndexImport
      parentRoute: typeof rootRoute
    }
    '/student/profile_setting/': {
      id: '/student/profile_setting/'
      path: '/student/profile_setting'
      fullPath: '/student/profile_setting'
      preLoaderRoute: typeof StudentProfilesettingIndexImport
      parentRoute: typeof rootRoute
    }
    '/student/request_history/': {
      id: '/student/request_history/'
      path: '/student/request_history'
      fullPath: '/student/request_history'
      preLoaderRoute: typeof StudentRequesthistoryIndexImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export const routeTree = rootRoute.addChildren({
  IndexRoute,
  ChangepasswordRoute,
  DesignRoute,
  Error404Route,
  ForgotpasswordRoute,
  LoginRoute,
  NolongerRoute,
  PrivacyRoute,
  RegisterRoute,
  ViolationspageRoute,
  StudentEventsRoute,
  StudentSpecEventsRoute,
  TestGetImageRoute,
  TestQueryParamsRoute,
  TestTestPostRoute,
  AdminIndexRoute,
  StudentIndexRoute,
  AdminAnalyticsMostfrequeststrandborrowerRoute,
  AdminAnalyticsPrintdataRoute,
  AdminAnalyticsPrintmostyearlevelborrowerRoute,
  AdminAnalyticsPrintmostyearlevelsectionborrowerRoute,
  AdminManagebooksCreatebooksRoute,
  AdminManagebooksEditbookRoute,
  AdminManagebooksQrscanaddbooksRoute,
  AdminManagebooksQrscanaddbooksbarcodeRoute,
  AdminManagebooksQrscanaddbooksformRoute,
  AdminManagelrnCycleaccountRoute,
  AdminManagelrnSpecificlrnRoute,
  AdminManagerequestOnsiterequestRoute,
  AdminManagerequestViewrequestformRoute,
  AdminManagestudentsCreateaccountRoute,
  AdminManagestudentsStudentviewformRoute,
  AdminManageviolationsHandleviolationsRoute,
  AdminProfilesettingsProfilesettingsRoute,
  StudentCatalogBookRoute,
  StudentContactContactRoute,
  StudentFrequentlyAskFAQRoute,
  StudentPrivacyPrivacyRoute,
  StudentRequesthistoryViewrequestRoute,
  StudentTermsOfuseTermsRoute,
  AdminAnalyticsIndexRoute,
  AdminManagebooksIndexRoute,
  AdminManagelrnIndexRoute,
  AdminManagerequestIndexRoute,
  AdminManagestudentsIndexRoute,
  AdminManageviolationsIndexRoute,
  StudentAboutIndexRoute,
  StudentBookmarkIndexRoute,
  StudentCatalogIndexRoute,
  StudentMobilenotifIndexRoute,
  StudentNotificationsIndexRoute,
  StudentProfilesettingIndexRoute,
  StudentRequesthistoryIndexRoute,
})

/* prettier-ignore-end */

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.jsx",
      "children": [
        "/",
        "/change_password",
        "/design",
        "/error404",
        "/forgot_password",
        "/login",
        "/nolonger",
        "/privacy",
        "/register",
        "/violations_page",
        "/student/Events",
        "/student/Spec_Events",
        "/test/getImage",
        "/test/queryParams",
        "/test/testPost",
        "/admin/",
        "/student/",
        "/admin/analytics/most_frequest_strand_borrower",
        "/admin/analytics/print_data",
        "/admin/analytics/print_most_year_level_borrower",
        "/admin/analytics/print_most_year_level_section_borrower",
        "/admin/manage_books/create_books",
        "/admin/manage_books/edit_book",
        "/admin/manage_books/qr_scan_add_books",
        "/admin/manage_books/qr_scan_add_books_barcode",
        "/admin/manage_books/qr_scan_add_books_form",
        "/admin/manage_lrn/cycle_account",
        "/admin/manage_lrn/specific_lrn",
        "/admin/manage_request/onsite_request",
        "/admin/manage_request/view_request_form",
        "/admin/manage_students/create_account",
        "/admin/manage_students/student_view_form",
        "/admin/manage_violations/handle_violations",
        "/admin/profile_settings/profile_settings",
        "/student/catalog/book",
        "/student/contact/Contact",
        "/student/frequentlyAsk/FAQ",
        "/student/privacy/Privacy",
        "/student/request_history/view_request",
        "/student/termsOfuse/Terms",
        "/admin/analytics/",
        "/admin/manage_books/",
        "/admin/manage_lrn/",
        "/admin/manage_request/",
        "/admin/manage_students/",
        "/admin/manage_violations/",
        "/student/about/",
        "/student/bookmark/",
        "/student/catalog/",
        "/student/mobile_notif/",
        "/student/notifications/",
        "/student/profile_setting/",
        "/student/request_history/"
      ]
    },
    "/": {
      "filePath": "index.jsx"
    },
    "/change_password": {
      "filePath": "change_password.jsx"
    },
    "/design": {
      "filePath": "design.jsx"
    },
    "/error404": {
      "filePath": "error404.jsx"
    },
    "/forgot_password": {
      "filePath": "forgot_password.jsx"
    },
    "/login": {
      "filePath": "login.jsx"
    },
    "/nolonger": {
      "filePath": "nolonger.jsx"
    },
    "/privacy": {
      "filePath": "privacy.jsx"
    },
    "/register": {
      "filePath": "register.jsx"
    },
    "/violations_page": {
      "filePath": "violations_page.jsx"
    },
    "/student/Events": {
      "filePath": "student/Events.jsx"
    },
    "/student/Spec_Events": {
      "filePath": "student/Spec_Events.jsx"
    },
    "/test/getImage": {
      "filePath": "test/getImage.jsx"
    },
    "/test/queryParams": {
      "filePath": "test/queryParams.jsx"
    },
    "/test/testPost": {
      "filePath": "test/testPost.jsx"
    },
    "/admin/": {
      "filePath": "admin/index.jsx"
    },
    "/student/": {
      "filePath": "student/index.jsx"
    },
    "/admin/analytics/most_frequest_strand_borrower": {
      "filePath": "admin/analytics/most_frequest_strand_borrower.jsx"
    },
    "/admin/analytics/print_data": {
      "filePath": "admin/analytics/print_data.jsx"
    },
    "/admin/analytics/print_most_year_level_borrower": {
      "filePath": "admin/analytics/print_most_year_level_borrower.jsx"
    },
    "/admin/analytics/print_most_year_level_section_borrower": {
      "filePath": "admin/analytics/print_most_year_level_section_borrower.jsx"
    },
    "/admin/manage_books/create_books": {
      "filePath": "admin/manage_books/create_books.jsx"
    },
    "/admin/manage_books/edit_book": {
      "filePath": "admin/manage_books/edit_book.jsx"
    },
    "/admin/manage_books/qr_scan_add_books": {
      "filePath": "admin/manage_books/qr_scan_add_books.jsx"
    },
    "/admin/manage_books/qr_scan_add_books_barcode": {
      "filePath": "admin/manage_books/qr_scan_add_books_barcode.jsx"
    },
    "/admin/manage_books/qr_scan_add_books_form": {
      "filePath": "admin/manage_books/qr_scan_add_books_form.jsx"
    },
    "/admin/manage_lrn/cycle_account": {
      "filePath": "admin/manage_lrn/cycle_account.jsx"
    },
    "/admin/manage_lrn/specific_lrn": {
      "filePath": "admin/manage_lrn/specific_lrn.jsx"
    },
    "/admin/manage_request/onsite_request": {
      "filePath": "admin/manage_request/onsite_request.jsx"
    },
    "/admin/manage_request/view_request_form": {
      "filePath": "admin/manage_request/view_request_form.jsx"
    },
    "/admin/manage_students/create_account": {
      "filePath": "admin/manage_students/create_account.jsx"
    },
    "/admin/manage_students/student_view_form": {
      "filePath": "admin/manage_students/student_view_form.jsx"
    },
    "/admin/manage_violations/handle_violations": {
      "filePath": "admin/manage_violations/handle_violations.jsx"
    },
    "/admin/profile_settings/profile_settings": {
      "filePath": "admin/profile_settings/profile_settings.jsx"
    },
    "/student/catalog/book": {
      "filePath": "student/catalog/book.jsx"
    },
    "/student/contact/Contact": {
      "filePath": "student/contact/Contact.jsx"
    },
    "/student/frequentlyAsk/FAQ": {
      "filePath": "student/frequentlyAsk/FAQ.jsx"
    },
    "/student/privacy/Privacy": {
      "filePath": "student/privacy/Privacy.jsx"
    },
    "/student/request_history/view_request": {
      "filePath": "student/request_history/view_request.jsx"
    },
    "/student/termsOfuse/Terms": {
      "filePath": "student/termsOfuse/Terms.jsx"
    },
    "/admin/analytics/": {
      "filePath": "admin/analytics/index.jsx"
    },
    "/admin/manage_books/": {
      "filePath": "admin/manage_books/index.jsx"
    },
    "/admin/manage_lrn/": {
      "filePath": "admin/manage_lrn/index.jsx"
    },
    "/admin/manage_request/": {
      "filePath": "admin/manage_request/index.jsx"
    },
    "/admin/manage_students/": {
      "filePath": "admin/manage_students/index.jsx"
    },
    "/admin/manage_violations/": {
      "filePath": "admin/manage_violations/index.jsx"
    },
    "/student/about/": {
      "filePath": "student/about/index.jsx"
    },
    "/student/bookmark/": {
      "filePath": "student/bookmark/index.jsx"
    },
    "/student/catalog/": {
      "filePath": "student/catalog/index.jsx"
    },
    "/student/mobile_notif/": {
      "filePath": "student/mobile_notif/index.jsx"
    },
    "/student/notifications/": {
      "filePath": "student/notifications/index.jsx"
    },
    "/student/profile_setting/": {
      "filePath": "student/profile_setting/index.jsx"
    },
    "/student/request_history/": {
      "filePath": "student/request_history/index.jsx"
    }
  }
}
ROUTE_MANIFEST_END */
